#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

import argparse
import os
import sys

import argcomplete as argcomplete

folder_blacklist = ["node_modules", ".metadata", "nexus-3.7.1-02", "venv", "golang.org"]


def search_for_git_folders(path):
    result = {}
    directories = os.listdir(path)

    if (".git" in directories) or (".svn" in directories):
        project_name = os.path.split(path)[-1]
        result[project_name] = path
        return result

    for dir_name in directories:
        directory = os.path.join(path, dir_name)
        if os.path.isdir(directory) and dir_name not in folder_blacklist:
            result.update(search_for_git_folders(directory))

    return result


def main():
    projects = {}

    script_path = os.path.dirname(os.path.realpath(__file__))
    workspace_file = os.path.join(script_path, "workspace.txt")
    if os.path.isfile(workspace_file):
        with open(workspace_file, 'r') as f:
            workspace_path = f.readlines()[0]
        projects.update(search_for_git_folders(workspace_path))
    else:
        pass

    def ProjectDirectoryCompleter(prefix, **kwargs):
        if len(projects) == 0:
            argcomplete.warn("No projects found. (Did you create workspace.txt?)")
        return list(filter(lambda key: key.startswith(prefix), projects.keys()))

    parser = argparse.ArgumentParser()
    parser.add_argument("project").completer = ProjectDirectoryCompleter
    argcomplete.autocomplete(parser)
    args = parser.parse_args()

    path = projects[args.project]
    os.system(f"gnome-terminal --working-directory=\"{path}\"")


if __name__ == '__main__':
    main()
